test:
  service: S3
  access_key_id: <%= Rails.application.credentials.dig(:aws, :access_key_id) %>
  secret_access_key: <%= Rails.application.credentials.dig(:aws, :secret_access_key) %>
  region: us-east-1
  bucket: test
  endpoint: "http://172.17.0.2:9000"
  force_path_style: true

local:
  service: S3
  access_key_id: "42N30OM85X39B0HCFQGJ"
  secret_access_key: "Dbx12SLo97/xPT8Hjn5X+oGBj9SZSAFCrmqTwdhW"
  region: us-east-1
  bucket: local
  endpoint: "http://172.28.128.3:9000"
  force_path_style: true

production:
  service: S3
  access_key_id: "ZHYIWUE6Y68E3KJ9YIBA"
  secret_access_key: "Za7bGadj5wjbSj3pWkrITOkj8TEufpilKVODf+Ed"
  region: us-east-1
  bucket: minio-ror-example
  endpoint: "http://ec2-35-156-218-124.eu-central-1.compute.amazonaws.com:9000"
  force_path_style: true

# Use rails credentials:edit to set the AWS secrets (as aws:access_key_id|secret_access_key)
# amazon:
#   service: S3
#   access_key_id: <%= Rails.application.credentials.dig(:aws, :access_key_id) %>
#   secret_access_key: <%= Rails.application.credentials.dig(:aws, :secret_access_key) %>
#   region: us-east-1
#   bucket: your_own_bucket

# Remember not to checkin your GCS keyfile to a repository
# google:
#   service: GCS
#   project: your_project
#   credentials: <%= Rails.root.join("path/to/gcs.keyfile") %>
#   bucket: your_own_bucket

# Use rails credentials:edit to set the Azure Storage secret (as azure_storage:storage_access_key)
# microsoft:
#   service: AzureStorage
#   path: your_azure_storage_path
#   storage_account_name: your_account_name
#   storage_access_key: <%= Rails.application.credentials.dig(:azure_storage, :storage_access_key) %>
#   container: your_container_name

# mirror:
#   service: Mirror
#   primary: local
#   mirrors: [ amazon, google, microsoft ]
